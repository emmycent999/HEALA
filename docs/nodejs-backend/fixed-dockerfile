# ---- Base Stage ----
FROM node:18.17.0-alpine AS base
WORKDIR /app
# Install OpenSSL and curl for health checks
RUN apk add --no-cache openssl curl

# ---- Dependencies Stage ----
FROM base AS dependencies
COPY package*.json ./
# Install ALL dependencies (including devDependencies needed for build)
RUN npm ci

# ---- Build Stage ----
FROM dependencies AS build
COPY . .
# Generate the Prisma client
RUN npx prisma generate
# Build the TypeScript code (now we have all dev dependencies)
RUN npm run build

# ---- Production Stage ----
FROM base AS production
# Copy package files
COPY package*.json ./
# Install only production dependencies
RUN npm ci --only=production && npm cache clean --force

# Copy the built application from the build stage
COPY --from=build /app/dist ./dist
# Copy the prisma schema and generated client
COPY --from=build /app/prisma ./prisma
COPY --from=build /app/node_modules/.prisma ./node_modules/.prisma

# Create a non-root user for better security
RUN addgroup -S appgroup && adduser -S appuser -G appgroup
RUN chown -R appuser:appgroup /app
USER appuser

# Expose the application port
EXPOSE 3000

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=40s --retries=3 \
  CMD curl -f http://localhost:3000/health || exit 1

# Define the command to run the application
CMD ["node", "dist/index.js"]